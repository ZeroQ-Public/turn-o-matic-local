# Maintainer: Hervis Pichardo <hpichardo@zeroq.cl>
#
# edit in ~/.config/zeroq/docker-compose/docker-compose.yml,
# ~/local/docker-compose.yml will be overwritten
version: "3.8" # Version 3.8 de API docker-compose
services:
  proxy:
    image: nginx:alpine
    container_name: tls-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt/live/cajalosandes.oangel.dev/fullchain.pem:/etc/ssl/certs/fullchain.pem:ro
      - /etc/letsencrypt/live/cajalosandes.oangel.dev/privkey.pem:/etc/ssl/private/privkey.pem:ro
    depends_on:
      - backend
  backend:
    # image: docker-test.zeroq.cl/zeroq-local:legacy-legacy-v1.22.0
    # image: docker.zeroq.cl/zeroq-local:rest-v2-cruz-verde-qa
    image: docker.zeroq.cl/zeroq-local:rest-v2-cruz-verde-qa-1
    container_name: zeroq
    volumes:
      # Montar directorios completos como en la configuraci√≥n que funciona
      - ./backend/data:/usr/src/app/backend/data # directorio data con .env
      - ./assets:/usr/src/app/displays/assets # logos, videos, etc.
    expose:
      - "3030"
    environment:
      - NODE_ENV=development
    # Cargar variables de entorno desde un archivo .env
    env_file:
      - ~/turn-o-matic-local/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: node index.js

  postgres:
    container_name: postgres
    image: docker.zeroq.cl/postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=panther
      - POSTGRES_PASSWORD=panther
      - POSTGRES_DB=zeroq
      - PGDATA=/var/lib/postgres/data
    volumes:
      - pgdata:/var/lib/postgres/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "panther"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: docker.zeroq.cl/redis:password
    container_name: redis
    volumes:
      - rddata:/data

volumes:
  backend-node-modules:
  pgdata:
  rddata:

networks:
  default:
    driver: bridge
